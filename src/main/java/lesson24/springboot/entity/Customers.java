package lesson24.springboot.entity;
// Generated Feb 2, 2019 5:38:52 PM by Hibernate Tools 5.2.10.Final

import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Customers generated by hbm2java
 */
@Entity
@Table(name = "CUSTOMERS", schema = "MA_STUDENT")
public class Customers implements java.io.Serializable {

	private BigDecimal custNum;
	private Salesreps salesreps;
	private String company;
	private BigDecimal creditLimit;
	private Set<Orders> orderses = new HashSet<Orders>(0);

	public Customers() {
	}

	public Customers(BigDecimal custNum) {
		this.custNum = custNum;
	}

	public Customers(BigDecimal custNum, Salesreps salesreps, String company, BigDecimal creditLimit,
			Set<Orders> orderses) {
		this.custNum = custNum;
		this.salesreps = salesreps;
		this.company = company;
		this.creditLimit = creditLimit;
		this.orderses = orderses;
	}

	@Id

	@Column(name = "CUST_NUM", unique = true, nullable = false, precision = 22, scale = 0)
	public BigDecimal getCustNum() {
		return this.custNum;
	}

	public void setCustNum(BigDecimal custNum) {
		this.custNum = custNum;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CUST_REP")
	public Salesreps getSalesreps() {
		return this.salesreps;
	}

	public void setSalesreps(Salesreps salesreps) {
		this.salesreps = salesreps;
	}

	@Column(name = "COMPANY", length = 40)
	public String getCompany() {
		return this.company;
	}

	public void setCompany(String company) {
		this.company = company;
	}

	@Column(name = "CREDIT_LIMIT", precision = 22, scale = 0)
	public BigDecimal getCreditLimit() {
		return this.creditLimit;
	}

	public void setCreditLimit(BigDecimal creditLimit) {
		this.creditLimit = creditLimit;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "customers")
	public Set<Orders> getOrderses() {
		return this.orderses;
	}

	public void setOrderses(Set<Orders> orderses) {
		this.orderses = orderses;
	}

}
